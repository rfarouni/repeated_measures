)
keepSeqlevels(A1 ,chromosomes )
A1
A1 <- keepSeqlevels(A1 ,chromosomes )
A1
hist(width(A1))
width(A1)
hist(width(A1),breaks =100)
order(width(A1))
sort(width(A1))
max(sort(width(A1)))
A1
Dac <- fread("wgEncodeDacMapabilityConsensusExcludable.bed.gz",sep="\t")
Dac <- fread("wgEncodeDacMapabilityConsensusExcludable.bed.gz",sep="\t")
Dac <- fread("/hd2/DeepChrome/genome_data/annotation/wgEncodeDacMapabilityConsensusExcludable.bed.gz",sep="\t")
Dac <- fread("/hd2/DeepChrome/genome_data/annotation/consensusBlacklist.bed",sep="\t")
(Dac_grange<- GRanges(seqnames = Dac$V1,
ranges   = IRanges(start = Dac$V2,
end = Dac$V3))
)
Dac_grange <- keepSeqlevels(Dac_grange ,chromosomes )
Dac_grange
sort(width(Dac_grange))
duke <- fread("/hd2/DeepChrome/genome_data/annotation/dukeExcludeRegions.bed",sep="\t")
(duke_grange<- GRanges(seqnames = duke$V1,
ranges   = IRanges(start = duke$V2,
end = duke$V3))
)
duke_grange <- keepSeqlevels(duke_grange ,chromosomes )
duke_grange
sort(width(duke_grange))
max(sort(width(duke_grange)))
max(sort(width(A1)))
duke_grange
Dac_grange
A1
(blacklist <-  c(Dac_grange, duke_grange))
(blacklist_merged <- reduce(blacklist))
A1
Dac_grange
duke_grange
max(sort(width(blacklist_merged)))
max(sort(width(A1)))
A1
width(A1)
A1[58:60,]
A1[56:66,]
blacklist_merged[56:66,]
blacklist_merged[46:56,]
blacklist_merged[26:40,]
blacklist_merged[40:46,]
gaps <- fread("/hd2/DeepChrome/genome_data/annotation/Exclude/gap.txt",sep="\t")
(gaps_grange <- GRanges(seqnames = gaps$V2,
ranges   = IRanges(start = gaps$V3,
end = gaps$V4))
)
gaps_grange <- keepSeqlevels(gaps_grange ,chromosomes )
gaps_grange
(blacklist <-  c(Dac_grange, duke_grange, gaps_grange))
(blacklist_merged <- reduce(blacklist))
A1
A1 == blacklist_merged
A1[123:126,]
blacklist_merged[123:126,]
sortSeqlevels(A1)
A1<- sortSeqlevels(A1)
A1 == blacklist_merged
blacklist_merged <- sortSeqlevels(blacklist_merged )
blacklist_merged
A1 == blacklist_merged
A1
blacklist_merged
?sortSeqlevels
seqlevels(A1) <-  chromosomes
A1 == blacklist_merged
seqlevels(A1) <-  rev(seqlevels(A1))
seqlevels(A1)
seqlevels(blacklist_merged )
seqlevels(blacklist_merged) <-  rev(seqlevels(blacklist_merged))
seqlevels(blacklist_merged)
A1 == blacklist_merged
A1
A1[seqnames(A1)=='chr2']
blacklist_merged[seqnames(blacklist_merged)=='chr2']
A1[seqnames(A1)=='chr3']
blacklist_merged[seqnames(blacklist_merged)=='chr3']
A1[seqnames(A1)=='chr4']
blacklist_merged[seqnames(blacklist_merged)=='chr4']
A1[seqnames(A1)=='chr5']
blacklist_merged[seqnames(blacklist_merged)=='chr5']
A1[seqnames(A1)=='chrX']
blacklist_merged[seqnames(blacklist_merged)=='chrX']
A1[seqnames(A1)=='chr22']
blacklist_merged[seqnames(blacklist_merged)=='chr22']
A1[seqnames(A1)=='chr21']
blacklist_merged[seqnames(blacklist_merged)=='chr21']
A1[seqnames(A1)=='chr20']
blacklist_merged[seqnames(blacklist_merged)=='chr20']
A1[seqnames(A1)=='chr10']
blacklist_merged[seqnames(blacklist_merged)=='chr10']
A1[seqnames(A1)=='chr11']
blacklist_merged[seqnames(blacklist_merged)=='chr11']
A1[seqnames(A1)=='chr12']
blacklist_merged[seqnames(blacklist_merged)=='chr12']
A1[seqnames(A1)=='chr13']
blacklist_merged[seqnames(blacklist_merged)=='chr13']
A1[seqnames(A1)=='chr14']
blacklist_merged[seqnames(blacklist_merged)=='chr14']
A1[seqnames(A1)=='chr15']
blacklist_merged[seqnames(blacklist_merged)=='chr15']
A1[seqnames(A1)=='chr16']
blacklist_merged[seqnames(blacklist_merged)=='chr16']
A1[seqnames(A1)=='chr17']
blacklist_merged[seqnames(blacklist_merged)=='chr17']
A1[seqnames(A1)=='chr18']
blacklist_merged[seqnames(blacklist_merged)=='chr18']
A1[seqnames(A1)=='chr19']
blacklist_merged[seqnames(blacklist_merged)=='chr19']
A1[seqnames(A1)=='chr9']
blacklist_merged[seqnames(blacklist_merged)=='chr9']
A1[seqnames(A1)=='chr8']
blacklist_merged[seqnames(blacklist_merged)=='chr8']
A1[seqnames(A1)=='chr7']
blacklist_merged[seqnames(blacklist_merged)=='chr7']
A1[seqnames(A1)=='chr6']
blacklist_merged[seqnames(blacklist_merged)=='chr6']
A1[seqnames(A1)=='chr6']==blacklist_merged[seqnames(blacklist_merged)=='chr6']
A1[seqnames(A1)=='chr6'][34:36,]
blacklist_merged[seqnames(blacklist_merged)=='chr6'][34:36,]
dirpath <- "/hd2/DeepChrome/genome_data/annotation/Exclude/"
dac  <- fread(file.path(dirpath,"consensusBlacklist.bed"),sep = "\t")
duke <- fread(file.path(dirpath,"dukeExcludeRegions.bed"),sep = "\t")
gaps <- fread(file.path(dirpath, "gap.txt"),sep = "\t")
dac_grange <- GRanges(seqnames = dac$V1,
ranges   = IRanges(start = dac$V2,
end = dac$V3))
duke_grange <- GRanges(seqnames = duke$V1,
ranges   = IRanges(start = duke$V2,
end = duke$V3))
gaps_grange <- GRanges(seqnames = gaps$V2,
ranges   = IRanges(start = gaps$V3,
end = gaps$V4))
chromosomes <- c('chr1','chr2','chr3','chr4','chr5','chr6','chr7','chr8','chr9','chr10',
'chr11','chr12','chr13','chr14','chr15','chr16','chr17','chr18','chr19',
'chr20','chr21','chr22','chrX')
dac_grange <- keepSeqlevels(dac_grange, chromosomes)
duke_grange <- keepSeqlevels(duke_grange, chromosomes)
gaps_grange <- keepSeqlevels(gaps_grange, chromosomes)
blacklist <-  c(dac_grange, duke_grange, gaps_grange)
blacklist <- reduce(blacklist)
blacklist
as.data.frame(blacklist)
as.data.frame(blacklist)[,1:3]
blacklist
file.path(dirpath, "blacklist.bed")
dirpath <- "/hd2/DeepChrome/genome_data/annotation/Exclude"
fwrite(blacklist, file.path(dirpath, "blacklist.bed"), col.names = FALSE)
blacklist <- as.data.frame(blacklist)[,1:3]
fwrite(blacklist, file.path(dirpath, "blacklist.bed"), col.names = FALSE)
fwrite(blacklist, file.path(dirpath, "blacklist.bed"), col.names = FALSE, sep = "\t")
library(data.table)
library(GenomicRanges)
dirpath <- "/hd2/DeepChrome/genome_data/annotation/Exclude"
dac  <- fread(file.path(dirpath,"consensusBlacklist.bed"),
sep = "\t")
duke <- fread(file.path(dirpath,"dukeExcludeRegions.bed"),
sep = "\t")
gaps <- fread(file.path(dirpath, "gap.txt"),
sep = "\t")
dac_grange <- GRanges(seqnames = dac$V1,
ranges   = IRanges(start = dac$V2,
end = dac$V3))
duke_grange <- GRanges(seqnames = duke$V1,
ranges   = IRanges(start = duke$V2,
end = duke$V3))
gaps_grange <- GRanges(seqnames = gaps$V2,
ranges   = IRanges(start = gaps$V3,
end = gaps$V4))
chromosomes <- c('chr1','chr2','chr3','chr4','chr5',
'chr6','chr7','chr8','chr9','chr10',
'chr11','chr12','chr13','chr14','chr15',
'chr16','chr17','chr18','chr19',
'chr20','chr21','chr22','chrX')
dac_grange <- keepSeqlevels(dac_grange, chromosomes)
duke_grange <- keepSeqlevels(duke_grange, chromosomes)
gaps_grange <- keepSeqlevels(gaps_grange, chromosomes)
blacklist <-  c(dac_grange, duke_grange, gaps_grange)
blacklist <- reduce(blacklist)
blacklist <- as.data.frame(blacklist)[,1:3]
fwrite(blacklist,
file.path(dirpath, "blacklist.bed"),
col.names = FALSE, sep = "\t")
gaps_filepath <- file.path(dirpath, "gap.txt")
gaps_filepath
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/gap.txt.gz",
gaps_filepath)
gaps_filepath <- file.path(dirpath, "gap.txt.gz")
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/gap.txt.gz",
gaps_filepath)
>fread
?fread
gaps <- fread(gaps_filepath, sep = "\t")
sprintf("gzip %s", gaps_filepath)
sprintf("zcat %s", gaps_filepath)
system(sprintf("zcat %s", gaps_filepath))
getwd()
)
sprintf("zcat < %s", gaps_filepath
system( sprintf("zcat < %s", gaps_filepath))
sprintf("zcat < %s", gaps_filepath)
system( sprintf("zcat < %s", gaps_filepath))
gaps <- fread(input = sprintf("zcat < %s", gaps_filepath), sep = "\t")
View(gaps)
dac_filepath <- file.path(dirpath,"consensusBlacklist.bed")
duke_filepath <- file.path(dirpath,"dukeExcludeRegions.bed")
gaps_filepath <- file.path(dirpath, "gap.txt.gz")
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/gap.txt.gz",
gaps_filepath)
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeMapability/wgEncodeDacMapabilityConsensusExcludable.bed.gz",
dac_filepath)
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeMapability/wgEncodeDukeMapabilityRegionsExcludable.bed.gz",
duke_filepath)
dac_filepath <- file.path(dirpath,"consensusBlacklist.bed.gz")
duke_filepath <- file.path(dirpath,"dukeExcludeRegions.bed.gz")
gaps_filepath <- file.path(dirpath, "gap.txt.gz")
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/gap.txt.gz",
gaps_filepath)
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeMapability/wgEncodeDacMapabilityConsensusExcludable.bed.gz",
dac_filepath)
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeMapability/wgEncodeDukeMapabilityRegionsExcludable.bed.gz",
duke_filepath)
dac  <- fread(input = sprintf("zcat < %s", dac_filepath), sep = "\t")
duke <- fread(input = sprintf("zcat < %s", duke_filepath), sep = "\t")
gaps <- fread(input = sprintf("zcat < %s", gaps_filepath), sep = "\t")
dac_grange <- GRanges(seqnames = dac$V1,
ranges   = IRanges(start = dac$V2,
end = dac$V3))
duke_grange <- GRanges(seqnames = duke$V1,
ranges   = IRanges(start = duke$V2,
end = duke$V3))
gaps_grange <- GRanges(seqnames = gaps$V2,
ranges   = IRanges(start = gaps$V3,
end = gaps$V4))
chromosomes <- c('chr1','chr2','chr3','chr4','chr5',
'chr6','chr7','chr8','chr9','chr10',
'chr11','chr12','chr13','chr14','chr15',
'chr16','chr17','chr18','chr19',
'chr20','chr21','chr22','chrX')
dac_grange <- keepSeqlevels(dac_grange, chromosomes)
duke_grange <- keepSeqlevels(duke_grange, chromosomes)
gaps_grange <- keepSeqlevels(gaps_grange, chromosomes)
blacklist <-  c(dac_grange, duke_grange, gaps_grange)
blacklist <- reduce(blacklist)
blacklist
blacklist <- as.data.frame(blacklist)[,1:3]
fwrite(blacklist,
file.path(dirpath, "blacklist.bed"),
col.names = FALSE, sep = "\t")
download.file("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/
wgEncodeMapability/wgEncodeDacMapabilityConsensusExcludable.bed.gz",
dac_filepath)
19817+15787+7568+14636
1,900*11
1900*11
19900/12
setwd("~/Documents/repos/repeated_measures/assets/assignments/chap4")
library("dplyr")
library("tidyr")
library("ggplot2")
library("nlme")
library("lme4")
df_wide <- fread("NLYS.txt", na.strings = ".")
df_wide
library("data.table")
df_wide <- fread("NLYS.txt", na.strings = ".")
df_wide
View(df_wide)
NLSY_long <- reshape(NLSY_wide,
direction = "long",
idvar = c("id", "boy"),
varying = list(c(2:5), c(7:10), c(11:14)),
v.names = c("read", "motherAge", "childAge"),
times = c("1", "2", "3", "4"))
NLSY_wide <- fread("NLYS.txt", na.strings = ".")
NLSY_wid
NLSY_long <- reshape(NLSY_wide,
direction = "long",
idvar = c("id", "boy"),
varying = list(c(2:5), c(7:10), c(11:14)),
v.names = c("read", "motherAge", "childAge"),
times = c("1", "2", "3", "4"))
NLSY_wide
NLSL_wide <- read.table("NLSL.txt",
header = TRUE,
na.strings = ".")
View(NLSL_wide)
NLSY_wide <- fread("NLSL.txt", na.strings = ".")
NLSY_wide
NLSL_wide <- fread("NLSL.txt", na.strings = ".")
NLSL_wide
View(NLSY_wide)
NLSL_wide <- fread("NLSL.txt", na.strings = ".")
NLSL_wide
NLSL_wide %>% mutate( age2 = age1 + 2)
NLSL_wide <- NLSL_wide %>% mutate( age2 = age1 + 2,
age3 = age1 + 4,
age4 = age1 + 6)
View(NLSY_wide)
NLSL_wide %>% mutate( age2 = age1 + 2,
age3 = age1 + 4,
age4 = age1 + 6)
NLSL_wide <- NLSL_wide %>% mutate( age2 = age1 + 2,
age3 = age1 + 4,
age4 = age1 + 6)
View(NLSY_wide)
NLSL_wide <- fread("NLSL.txt", na.strings = ".")
NLSL_wide
NLSL_wide <- NLSL_wide %>% mutate( age2 = age1 + 2,
age3 = age1 + 4,
age4 = age1 + 6,
m_age2 = m_age1 + 2,
m_age3 = m_age1 + 4,
m_age4 = m_age1 + 6)
NLSL_wide <- fread("NLSL.txt", na.strings = ".")
NLSL_wide
NLSL_wide <- NLSL_wide %>% mutate(m_age1 = m_age
m_age2 = m_age1 + 2,
m_age3 = m_age1 + 4,
m_age4 = m_age1 + 6
c_age1 = age,
c_age2 = age1 + 2,
c_age3 = age1 + 4,
c_age4 = age1 + 6,
NLSL_wide <- NLSL_wide %>% mutate(m_age1 = m_age,
m_age2 = m_age1 + 2,
m_age3 = m_age1 + 4,
m_age4 = m_age1 + 6
c_age1 = age,
c_age2 = age1 + 2,
c_age3 = age1 + 4,
c_age4 = age1 + 6)
NLSL_wide <- NLSL_wide %>% mutate(m_age1 = m_age,
m_age2 = m_age1 + 2,
m_age3 = m_age1 + 4,
m_age4 = m_age1 + 6,
c_age1 = age,
c_age2 = age1 + 2,
c_age3 = age1 + 4,
c_age4 = age1 + 6)
NLSL_wide <- fread("NLSL.txt", na.strings = ".")
NLSL_wide
NLSL_wide <- NLSL_wide %>% mutate(m_age1 = m_age,
m_age2 = m_age + 2,
m_age3 = m_age + 4,
m_age4 = m_age + 6,
c_age1 = age,
c_age2 = age + 2,
c_age3 = age + 4,
c_age4 = age + 6)
View(NLSL_wide)
NLSL_wide <- fread("NLSL.txt", na.strings = ".")
NLSL_wide
NLSL_wide <- NLSL_wide %>% mutate(m_age1 = m_age,
m_age2 = m_age + 2,
m_age3 = m_age + 4,
m_age4 = m_age + 6,
c_age1 = age,
c_age2 = age + 2,
c_age3 = age + 4,
c_age4 = age + 6) %>% select(-c(m_age, age))
NLSL_long <- reshape(NLSL_wide ,
direction = "long",
idvar = c("id", "boy"),
varying = list(c(2:5), c(10:13), c(14:17)),
v.names = c("read_score", "mother_age", "child_age"),
times = c("1", "2", "3", "4"))
View(NLSL_long)
NLSL_long <- reshape(NLSL_wide ,
direction = "long",
idvar = c("id"),
varying = list(c(2:5), c(10:13), c(14:17)),
v.names = c("read_score", "mother_age", "child_age"),
times = c("1", "2", "3", "4"))
View(NLSL_long)
NLSL_long_filtered <- na.omit(NLSL_long)
NLSL_long <- NLSL_wide %>%
reshape(direction = "long",
idvar = c("id"),
varying = list(c(2:5), c(10:13), c(14:17)),
v.names = c("read_score", "mother_age", "child_age"),
times = c("1", "2", "3", "4")) %>% na.omit()
NLSY_long <- within(NLSY_long, {
id <- factor(id)
boy <- factor(boy)
time <- factor(time)
mother_age <- mother_age - 6
child_age <- child_age - 6
})
NLSL_long <- within(NLSL_long, {
id <- factor(id)
boy <- factor(boy)
time <- factor(time)
mother_age <- mother_age - 6
child_age <- child_age - 6
})
ggplot(data = NLSL_long , aes(x = child_age , y = read_score group = id)) +
geom_line(aes(colour = id), size = 0.2) +
xlab("Age") +
ylab("Read") +
ggtitle("Reading Data") +
theme(legend.position = "none")
ggplot(data = NLSL_long , aes(x = child_age , y = read_score, group = id)) +
geom_line(aes(colour = id), size = 0.2) +
xlab("Age") +
ylab("Read") +
ggtitle("Reading Data") +
theme(legend.position = "none")
ggplot(data = NLSL_long ,
aes(x = child_age ,
y = read_score,
group = id)) +
facet_grid(. ~ boy) +
geom_line(aes(colour = id), size = 0.2) +
xlab("Age") +
ylab("Read") +
ggtitle("Reading Data") +
theme(legend.position = "none")
ggplot(data = NLSL_long ,
aes(x = child_age ,
y = read_score,
group = boy)) +
facet_grid(. ~ id) +
geom_line(aes(colour = boy), size = 0.2) +
xlab("Age") +
ylab("Reading Score") +
ggtitle("NLSL Data") +
theme(legend.position = "none")
View(NLSL_long)
NLSL_long$id
NLSL_long$id[1:20]
NLSL_long %>% filter(id %in% NLSL_long$id[1:20])
ggplot(data = NLSL_long %>% filter(id %in% NLSL_long$id[1:20]) ,
aes(x = child_age ,
y = read_score,
group = boy)) +
facet_grid(. ~ id) +
geom_line(aes(colour = boy), size = 0.2) +
xlab("Age") +
ylab("Reading Score") +
ggtitle("NLSL Data") +
theme(legend.position = "none")
ggplot(data = NLSL_long %>% filter(id %in% NLSL_long$id[1:20]) ,
aes(x = child_age ,
y = read_score,
group = boy)) +
facet_wrap(. ~ id, ncol=5) +
geom_line(aes(colour = boy), size = 0.2) +
xlab("Age") +
ylab("Reading Score") +
ggtitle("NLSL Data") +
theme(legend.position = "none")
ggplot(data = NLSL_long %>% filter(id %in% NLSL_long$id[1:20]) ,
aes(x = child_age ,
y = read_score,
group = boy)) +
facet_wrap( ~ id, ncol=5) +
geom_line(aes(colour = boy), size = 0.2) +
xlab("Age") +
ylab("Reading Score") +
ggtitle("NLSL Data") +
theme(legend.position = "none")
ggplot(data = NLSL_long %>% filter(id %in% NLSL_long$id[1:25]) ,
aes(x = child_age ,
y = read_score,
group = boy)) +
facet_wrap( ~ id, ncol=5) +
geom_line(aes(colour = boy), size = 0.2) +
xlab("Age") +
ylab("Reading Score") +
ggtitle("NLSL Data") +
theme(legend.position = "none")
ggplot(data = NLSL_long %>% filter(id %in% NLSL_long$id[1:36]) ,
aes(x = child_age ,
y = read_score,
group = boy)) +
facet_wrap( ~ id, ncol=6) +
geom_line(aes(colour = boy), size = 0.2) +
xlab("Age") +
ylab("Reading Score") +
ggtitle("NLSL Data") +
theme(legend.position = "none")
NLSL_fit <- lme(fixed = read ~ child_age + I(child_age^2),
random = ~1 + child_age + I(child_age^2)|id,
data = NLSY_long,
method = "ML")
NLSL_fit <- lme(fixed = read ~ child_age + I(child_age^2),
random = ~1 + child_age + I(child_age^2)|id,
data = NLSL_long,
method = "ML")
NLSL_fit <- lme(fixed = read_score ~ child_age + I(child_age^2),
random = ~1 + child_age + I(child_age^2)|id,
data = NLSL_long,
method = "ML")
NLSL_fit <- lme(fixed = read_score ~ child_age + I(child_age^2),
random = ~1 + child_age + I(child_age^2)|id,
data = NLSL_long)
?lme
?lmer
NLSL_fit <- lmer( read_score ~ child_age + I(child_age^2)+ (1 + child_age + I(child_age^2)|id),
data = NLSL_long)
summary(NLSY_fit)
summary(NLSL_fit )
